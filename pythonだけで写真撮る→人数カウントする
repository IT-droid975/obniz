import cv2

import io
import os
from google.protobuf.json_format import MessageToJson
#from google.protobuf import json_format
import json
from google.cloud import vision
from google.cloud.vision import types

try:
    #今回の作業用ディレクトリ
    base_dir = r'C:/Users/m2270092/Desktop/sample-vision/'
    #さっきのJSONファイルのファイル名
    credential_path = base_dir + r'api_key'
    #サービスアカウントキーへのパスを通す
    os.environ['GOOGLE_APPLICATION_CREDENTIALS'] = credential_path
    #visionクライアントの初期化
    client = vision.ImageAnnotatorClient()

    i=0
    while True:
        if(i==3):
            break
        fileName = "photo_"+ str(i) +".png"
        # 内蔵カメラのデバイスIDは0、USBで接続したカメラは1以降。
        capture = cv2.VideoCapture(0)
        # 取得した画像データは変数imageに格納。retは取得成功変数。
        ret, image = capture.read()
        if ret == True:
            # 取得した画像を出力。fileNameは出力する画像名。
            cv2.imwrite(fileName, image)

        #対象となる画像のファイル名
        file_name = base_dir + fileName
        with io.open(file_name, 'rb') as image_file:
            content = image_file.read()
        image = types.Image(content=content)
        objects = client.object_localization(
            image=image).localized_object_annotations
        #print('Number of objects found: {}'.format(len(objects)))

        p=0
        for object_ in objects:
            #↓一覧表示
            # print('\n{} (confidence: {})'.format(object_.name, object_.score))
            #合致率60%以上でカウント
            if object_.name == "Person" :
                if object_.score > 0.60 :
                    p = p+1
            # print('Normalized bounding polygon vertices: ')
            # for vertex in object_.bounding_poly.normalized_vertices:
            #     print(' - ({}, {})'.format(vertex.x, vertex.y))
        print(str(p)+"名")
        i=i+1

except KeyboardInterrupt:
    #ctrl+c
    print("finish")
